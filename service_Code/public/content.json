[{"title":"The Swift Programming Language (4.0)(翻译)","date":"2018-09-11T08:39:26.000Z","path":"2018/09/11/The-Swift-Programming-Language-翻译/","text":"一直以来，我都想好好的研究研究一下这个新语言。之前虽然用过一段时间，但一直都觉得不甚了解。这本书已经得到了好久，期间也断断续续的读过，但我的英文水平有限，所以也就是看看示例代码而已。这次，又捡起这本书。想着可怜巴巴的英文水平，就想着借这个机会翻译翻译，即便是多数情况要借助翻译工具，但接触的多了，我的英文水平总该有所改善吧。同时又可以细化自己对这门语言的理解。记得有位大神说过：想让自己的水平提高，就试着写自己的博客吧。自己最早接触的语言是C，后来做iOS开发，学习了OC语言。对python，js和java有点模糊的认知。记得刚接触OC时，就无数次的接触这样一个名词：“面向对象”。在将近3年的开发经历中，一直都是使用OC。自从1年前开始接触swift，发现这个新语言真真的是好用。奈何现在公司的项目还没有考虑使用这门语言，所以，自己只能随便搞搞。最近的工作紧张起来，希望自己可以坚持翻译。","tags":[{"name":"Swift","slug":"Swift","permalink":"http://yoursite.com/tags/Swift/"}]},{"title":"教你如何轻松搭建属于自己的博客","date":"2018-09-07T01:29:56.000Z","path":"2018/09/07/教你如何轻松搭建属于自己的博客/","text":"一，Mac下利用Hexo+GitHub轻松搭建自己的博客Hexo安装1，基本流程：1.hexo是基于node.js的，所以需要安装node.js，而安装node.js最好选择homebrew2.homebrew安装需要依赖ruby3.安装顺序：homebrew—-&gt;node.js—-&gt;hexo2，具体安装流程：1,检查安装ruby终端命令：检查是否安装rubyruby -v 如果显示ruby的版本，说明电脑已经安装了ruby。否则，需要安装ruby。2,安装homebrew终端命令：ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 3,安装nodejs终端命令：brew install node 在安装nodejs过程中，提示如下警告：You have Xcode 8 installed without the CLT; 根据提示进行安装4，安装hexo终端命令:sudo npm install -g hexo Hexo安装成功本地工作空间1，创建本地文件夹，在该文件夹中启动Hexo工作，注意自己注意创建的目录：mkdir blog 新建文件 cd blog 打开新建的文件 hexo init 在当前文件夹中初始化hexo 2，我们先不写东西，只是生成hexo默认的一个界面，看下效果：hexo generate /** 生成一套静态网页 **/ hexo server /** 在服务器上运行 **/ 3，在浏览器中打开下面的地址，就可以看到默认的界面主页http://localhost:4000 本地工作空间创建完毕关联到GitHub1，我们先不急着写博客，先解决一个问题，就是本地创建的博客文件，如何同步到GitHub中？这里有一种比较方便的方法，可以自动同步你的文件到GitHub。那就是使用Hexo的配置文件来处理。Hexo的每一个功能的配置文件都是_config.yml， 具体说明看下面的注解： # Hexo Configuration ## Docs: https://hexo.io/docs/configuration.html ## Source: https://github.com/hexojs/hexo/ # Site ##修改以适应搜索引擎的收录 title: Hexo ##定义网站的标题 subtitle: ##定义网站的副标题 description: ##定义网站的描述 author: jason jwl ##定义网站的负责人 language: ##定义网站的语言,默认zh-Hans timezone: ##定义网站的时区 # URL ## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos; url: http://yoursite.com ##定义网站访问的域名 root: / ##定义所在Web文件夹在哪个目录 permalink: :year/:month/:day/:title/ ##定义时间格式 permalink_defaults: # Directory source_dir: source ##定义从哪个文件夹获取博客资料 public_dir: public ##定义生成静态网站到哪个文件夹 archive_dir: archives category_dir: categories code_dir: downloads/code i18n_dir: :lang skip_render: # Writing new_post_name: :title.md # File name of new posts default_layout: post titlecase: false # Transform title into titlecase external_link: true # Open external links in new tab filename_case: 0 render_drafts: false post_asset_folder: false relative_link: false future: true highlight: enable: true line_number: true auto_detect: false tab_replace: # Category &amp; Tag default_category: uncategorized category_map: tag_map: # Date / Time format ## Hexo uses Moment.js to parse and display date ## You can customize the date format as defined in ## http://momentjs.com/docs/#/displaying/format/ date_format: YYYY-MM-DD time_format: HH:mm:ss # Pagination ## Set per_page to 0 to disable pagination per_page: 10 ##定义每一页多少条博客 pagination_dir: page # Extensions ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: landscape ##定义使用的主题 # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: 那么，如何实现文件自动同步呢？注意配置文件的最后一部分，我们将在那里配置GitHub。deploy: type: git repo: https://github.com/xxx/xxx.github.io.git branch: master （xxx为个人github的name） 关联到GitHub完成让我们来创建一篇自己的博客吧首先进入终端，使用cd命令进入到有Hexo框架的目录里面（bolg），输入：hexo new post &quot;我的第一篇博客&quot; (注意，该文件可以使用Markdown的编辑文件编辑，Hexo会自动转化为静态页面) 然后输入：hexo generate 或者 hexo g / 生成一套静态网页 /最后将该页面同步到GitHub上去，输入Hexo deploy 或者 Hexo d,该静态页面就会同步到GitHub上。创建一篇自己的博客完成如何访问GitHub上的静态页面呢从《本地工作空间》我们知道，可以在自己电脑上启动Hexo服务器，然后通过固定的地址就可以看到我们自己定义的界面。我们后来自己创建的博客也会出现在这个界面，但毕竟是我们本地的服务器，访问上很不方便。如何让远在五湖四海的兄弟都能看到你最新的博客呢？对，答案就是将Hexo生成的静态页面托管到GitHub上。上面的工作，我们已经顺利的将静态页面托管到了GitHub上，接下来就是如何访问他们了？创建自己的GitHub Pages创建自己的GitHub Pages完成快速、简洁且高效的博客框架Hexo官网：https://hexo.io/zh-cn/ 一款比较漂亮的博客主题资源地址themes资源地址theme","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"Hello World","date":"2018-09-07T01:02:13.000Z","path":"2018/09/07/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]